from credit_scoring import CreditScoringModel
import argparse

def main():
    parser = argparse.ArgumentParser(description='–ó–∞–ø—É—Å–∫ ML –º–æ–¥–µ–ª–∏ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ —Å–∫–æ—Ä–∏–Ω–≥–∞')
    parser.add_argument('--source', choices=['online', 'local'], default='online',
                    help='–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö (online –∏–ª–∏ local)')
    parser.add_argument('--visualize', action='store_true', 
                    help='–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏')
    parser.add_argument('--dashboard', action='store_true',
                    help='–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥')
    parser.add_argument('--quick', action='store_true',
                    help='–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π')
    
    args = parser.parse_args()
    
    print("üéØ –ó–ê–ü–£–°–ö –ü–†–û–ï–ö–¢–ê –ö–†–ï–î–ò–¢–ù–û–ì–û –°–ö–û–†–ò–ù–ì–ê")
    print("=" * 50)
    
    model = CreditScoringModel()
    model.load_data(source=args.source)
    
    if not args.quick:
        model.explore_data()
    
    model.preprocess_data()
    model.train_models()
    
    if args.visualize and not args.quick:
        model.evaluate_models()
    
    if args.dashboard:
        model.create_dashboard()
    else:
        model.generate_report()

if __name__ == "__main__":
    main()